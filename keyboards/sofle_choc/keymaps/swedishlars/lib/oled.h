// Copyright 2024 Lars Johansson (github.com/swedishlars)
// SPDX-License-Identifier: GPL-2.0-or-later

#pragma once

#include "quantum.h"

// Oled one line lenght + char array termination
#define OLED_KEYLOG_LENGTH 11

// How long to display help message
#define OLED_HELP_TIME 10000

// How long to display startup logo
#define OLED_LOGO_TIME 2000

// Turn off oled when there is no input activity
#define OLED_SUSPEND_TIME 60000

#define OLED_BRIGTHNESS_STEP 32

// global to check if oled startup logo anim is done
extern bool oled_startup_done;

// timer for hiding oled help
extern uint16_t oled_help_timer;

// global used to check if keylogger is enabled
extern bool oled_keylogger_enabled;

// Deferred execution callback to clear and rotate display.
uint32_t oled_startup(uint32_t trigger_time, void *cb_arg);

bool process_record_user_oled(uint16_t keycode, keyrecord_t *record); 

// Render key code & description help on oled
void add_keylog(uint16_t keycode, keyrecord_t *record);

void oled_startup_logo(void);
void oled_render_left(void);
void oled_render_right(void);
void oled_render_boot(bool bootloader);

// Enum names for keycode description array index
enum keycode_desc_index {
    KEYCODE_DEFAULT,
    KEYCODE_SHIFT,
    KEYCODE_LOWER,
    KEYCODE_RAISE
};

// Key code descriptions - array index represents keycode
// NOTE: backslash does not count as a char
static const char PROGMEM keycode_to_desc[][256][OLED_KEYLOG_LENGTH] = {
//   0           1            2            3            4            5            6            7            8            9         Raw code 
//  ------------ ------------ ------------ ------------ ------------ ------------ ------------ ------------ ------------ ------------
    {
    "          ","          ","          ","          "," a        "," b        "," c        "," d        "," e        "," f        ",  // 0-9
    " g        "," h        "," i        "," j        "," k        "," l        "," m        "," n        "," o        "," p        ",  // 10-19
    " q        "," r        "," s        "," t        "," u        "," v        "," w        "," x        "," y        "," z        ",  // 20-29
    " 1        "," 2        "," 3        "," 4        "," 5        "," 6        "," 7        "," 8        "," 9        "," 0        ",  // 30-39
    "Enter     "," Escape   ","Back Space"," Tab      ","Space     "," -        "," =        "," [        "," ]        "," \\       ",  // 40-49
    " #        "," ;        "," \'       "," `        "," ,        "," .        "," /        ","128       "," F1       "," F2       ",  // 50-59
    " F3       "," F4       "," F5       "," F6       "," F7       "," F8       "," F9       "," F10      "," F11      "," F12      ",  // 60-69
    "Print Scrn","Scroll Lck","Play/Pause","Insert    "," Home     ","Page Up   "," Delete   "," End      ","Page Down ","Right     ",  // 70-79
    " Left     "," Down     "," Up       ","Num Lock  ","/         "," *        "," -        "," +        ","Enter     "," 1        ",  // 80-89
    " 2        "," 3        "," 4        "," 5        "," 6        "," 7        "," 8        "," 9        "," 0        "," .        ",  // 90-99
    " \\       ","App Menu  ","Mac Power "," =        "," F13      "," F14      "," F15      "," F16      "," F17      "," F18      ",  // 100-109
    " F19      "," F20      "," F21      "," F22      "," F23      "," F24      ","          ","          ","          ","          ",  // 110-119
    "          ","          ","          ","          ","          ","          ","          ","          ","          ","          ",  // 120-129
    "          ","          ","          ","          ","          ","          ","          ","          ","          ","          ",  // 130-139
    "          ","          ","          ","          ","          ","          ","          ","          ","          ","          ",  // 140-149
    "          ","          ","          ","          ","          ","          ","          ","          ","          ","          ",  // 150-159
    "          ","          ","          ","          ","          ","Sys Power ","Sys Sleep ","Sys Wake  ","Mute      ","Vol Up    ",  // 160-169
    "Vol Down  ","Next Track","Prev Track","          ","Play/Pause","          ","          ","          ","          ","          ",  // 170-179
    "          ","          ","          ","          ","          ","          ","          ","          ","          ","          ",  // 180-189
    "          ","          ","          ","MissionCtl","Launch Pad","          ","          ","          ","          ","          ",  // 190- 199
    "          ","          ","          ","          ","0x80      ","0x80      ","0x80      ","0x80      ","0x80      ","L MouseBtn",  // 200-209
    "R MouseBtn","M MouseBtn","MouseBtn 4","MouseBtn 5","0x80      ","0x80      ","0x80      ","Wheel Up  ","Wheel Down","Wheel Left",  // 210-219
    "Wheel Rght","MouseAcc 0","MouseAcc 1","MouseAcc 2","L Control ","L Shift   ","L Alt     ","L Gui     "," R Control","R Shift   ",  // 220-229
    "R Alt     ","R Gui     ","          ","          ","          ","          ","          "," 24       "," 26       "," 24       ",  // 230-239
    "25        ","          ","          ","          ","          ","          ","          ","          ","          "," 24       ",  // 240- 249
    "25        "," 27       "," 26       ","          ","          ","          "                                                       // 250-255
    },

// Shifted key code descriptions - array index represents keycode
//   0           1            2            3            4            5            6            7            8            9              Raw code 
//  ----------   ------------ ------------ ------------ ------------ ------------ ------------ ------------ ------------ ------------
    {
    "          ","          ","          ","          "," A        "," B        "," C        "," D        "," E        "," F        ",  // 0-9
    " G        "," H        "," I        "," J        "," K        "," L        "," M        "," N        "," O        "," P        ",  // 10-19
    " Q        "," R        "," S        "," T        "," U        "," V        "," W        "," X        "," Y        "," Z        ",  // 20-29
    " !        "," \"       ","Pound     "," $        ","Percent   "," ^        "," &        "," *        "," (        "," )        ",  // 30-39
    "Enter     ","Escape    ","Back Space","Tab       ","Space     "," _        "," +        "," {        "," }        "," |        ",  // 40-49
    " ~        "," :        ","  @       ","Neg Symbol"," <        "," >        "," ?        "," Caps Lock"," F1       "," F2       ",  // 50-59
    " F3       "," F4       "," F5       "," F6       "," F7       "," F8       "," F9       "," F10      "," F11      "," F12      ",  // 60-69
    "Print Scrn","Scroll Lck","Play/Pause","Insert    "," Home     ","Page Up   ","Delete    "," End      ","Page Down ","Right     ",  // 70-79
    " Left     "," Down     "," Up       ","Num Lock  ","/         "," *        "," -        "," +        ","Enter     "," 1        ",  // 80-89
    " 2        "," 3        "," 4        "," 5        "," 6        "," 7        "," 8        "," 9        "," 0        "," .        ",  // 90-99
    " |        ",                                                                                                                       // 100
    },

// Key description overrides per layer
    // LOWER layer
    {
    [7]  =  "d (tmux)  ",
    [9]  =  "f (maxwin)",
    [23] =  "t (Term)  "
    },

    // UPPER layer
    {
    [53] =  "(Neg Symb)"
    }
};


// 64x128 oled logo
// Generate cpp byte arrays from .png images using the online image2cpp app
// Use Chrome browser.
// Output settings: "Plain bytes", "Vertical - 1 bit per pixel

static const char PROGMEM qmk_logo[] = {
0xff, 0x01, 0x01, 0x01, 0xe1, 0x61, 0x21, 0x3f, 0x01, 0x3f, 0x3f, 0x01, 0x3f, 0x20, 0x20, 0x3f, 
0x01, 0x01, 0x3f, 0x20, 0x20, 0x3f, 0x01, 0x3f, 0x3f, 0x01, 0x3f, 0x21, 0x61, 0xe1, 0x01, 0x01, 
0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xf1, 0x11, 0x11, 0xd1, 0x51, 
0x51, 0x51, 0x51, 0x51, 0x71, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xff, 0xff, 
0x2d, 0x2d, 0x2d, 0x2d, 0xed, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x00, 
0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0xed, 0x2d, 0x2d, 
0x2d, 0x2d, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0xfb, 0x0a, 
0x0a, 0x0a, 0x0a, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
0x79, 0x79, 0x79, 0x79, 0x79, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x60, 0xc0, 0x80, 0x80, 
0xff, 0x80, 0x80, 0x80, 0xc0, 0x60, 0x3f, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0x49, 0x49, 
0x49, 0x49, 0xcf, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf3, 0x92, 0x92, 0xf3, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
0xfb, 0x0b, 0x0b, 0x0b, 0x7b, 0x60, 0x40, 0xc0, 0x00, 0xc0, 0xc0, 0x00, 0xc0, 0x40, 0x40, 0xc0, 
0x07, 0x00, 0xc0, 0x40, 0x40, 0xc0, 0x00, 0xc0, 0xc0, 0x00, 0xc0, 0x40, 0x60, 0x7b, 0x0b, 0x0b, 
0x0b, 0x0b, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0xff, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x04, 0x07, 0x07, 0x04, 0x07, 0x00, 0x00, 0x07, 
0x04, 0x04, 0x07, 0x00, 0x00, 0x07, 0x04, 0x07, 0x07, 0x04, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe3, 0x22, 0xe2, 0x63, 0x20, 
0xa0, 0xa0, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x80, 0x80, 0xfc, 0x07, 
0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf8, 0x08, 0x18, 0x30, 0x90, 
0x90, 0x30, 0x20, 0x60, 0x30, 0x90, 0xd0, 0x10, 0x30, 0xe0, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x1c, 0x06, 0xe2, 
0xf3, 0xf9, 0x19, 0x09, 0x19, 0x33, 0xe3, 0x06, 0x1e, 0xfc, 0xf8, 0xe0, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x40, 0x40, 0x7f, 0x01, 
0x01, 0x7f, 0x40, 0x40, 0x7f, 0x01, 0x7f, 0x40, 0x40, 0x7f, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x1c, 0x30, 0x23, 
0x67, 0x4f, 0x4c, 0xc8, 0x8c, 0x06, 0x33, 0x70, 0x7c, 0xff, 0xcf, 0x03, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0xe8, 0x08, 0x38, 0xe0, 0xf0, 
0x18, 0xc8, 0x18, 0xf0, 0xe0, 0x38, 0x08, 0xe8, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x40, 0x40, 0x40, 
0xc0, 0xc0, 0x80, 0x00, 0x01, 0x81, 0xc1, 0x41, 0x41, 0xc1, 0xc1, 0xc0, 0x80, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0f, 0x38, 0x23, 0x21, 
0x3c, 0x0f, 0x3c, 0x21, 0x23, 0x38, 0x0f, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0xfe, 
0x78, 0xc3, 0x0f, 0x3e, 0x0e, 0x83, 0xf8, 0xfe, 0x00, 0x00, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xce, 0x6a, 0x2a, 0xaa, 0xaa, 
0xba, 0xb2, 0x06, 0x3c, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x10, 0x10, 0x1f, 
0x00, 0x01, 0x03, 0x02, 0x03, 0x01, 0x00, 0x1f, 0x10, 0x10, 0x1f, 0x1f, 0x0f, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x18, 0x30, 0x27, 0x2d, 0x2c, 
0x26, 0x33, 0x18, 0x10, 0x1f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x10, 0x10, 0xf0, 
0xf0, 0x80, 0xc0, 0x60, 0x30, 0x90, 0xd0, 0xd0, 0xf0, 0x70, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x02, 0x0e, 0xc6, 0x72, 
0x1a, 0x0a, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0xe3, 
0xe3, 0xc9, 0x9c, 0x3e, 0x7f, 0xff, 0xf3, 0xc1, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x08, 0x88, 0x87, 0x80, 
0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x04, 0x04, 0x07, 
0x07, 0x00, 0x01, 0x03, 0x06, 0x04, 0x05, 0x05, 0x07, 0x07, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x03, 0x09, 0xec, 0xa6, 
0x26, 0xac, 0xa9, 0xa3, 0xbe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
0xff, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 
0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 
0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc1, 0xc3, 0xc6, 0xc4, 0xc5, 
0xc5, 0xc5, 0xc4, 0xc6, 0xc3, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xff, 0xff
};

// Layer logos
static const char PROGMEM layer_logo[] = {
0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0x06, 0x06, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 
0xfe, 0x06, 0x06, 0xf6, 0xf6, 0xf6, 0x06, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xc6, 0x0e, 0x3e, 0x7e, 
0x3e, 0x8e, 0xe6, 0xfe, 0xfe, 0xfe, 0xfe, 0x06, 0x06, 0xf6, 0xf6, 0xf6, 0xf6, 0xf6, 0xfe, 0xfe, 
0xfe, 0xfe, 0x06, 0x06, 0xf6, 0xf6, 0xf6, 0x66, 0x0e, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 0xfe, 
0xff, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x60, 0x60, 0x6f, 0x6f, 0x6f, 0x6f, 0x6f, 0x7f, 0x7f, 0x7f, 
0x7f, 0x60, 0x60, 0x7e, 0x7e, 0x7e, 0x7e, 0x60, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7e, 0x60, 
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x60, 0x60, 0x6e, 0x6e, 0x6e, 0x6e, 0x6f, 0x7f, 0x7f, 
0x7f, 0x7f, 0x60, 0x60, 0x7c, 0x78, 0x72, 0x66, 0x6f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0xff
};


static const char PROGMEM layer_base_logo[] = {
0xff, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xf9, 0xf9, 0x09, 0x09, 
0x09, 0x99, 0xf1, 0x01, 0x01, 0x01, 0x01, 0xf9, 0xf9, 0x09, 0x09, 0x09, 0xf9, 0x01, 0x01, 0x01, 
0x01, 0x01, 0xf1, 0xf9, 0x09, 0x09, 0x09, 0x09, 0x09, 0x01, 0x01, 0x01, 0x01, 0xf9, 0xf9, 0x09, 
0x09, 0x09, 0x09, 0x09, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xff, 
0xff, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x9f, 0x9f, 0x91, 0x91, 
0x91, 0x9b, 0x8e, 0x80, 0x80, 0x80, 0x80, 0x9f, 0x9f, 0x81, 0x81, 0x81, 0x81, 0x9f, 0x80, 0x80, 
0x80, 0x80, 0x91, 0x91, 0x91, 0x91, 0x91, 0x9f, 0x8f, 0x80, 0x80, 0x80, 0x80, 0x9f, 0x9f, 0x91, 
0x91, 0x91, 0x91, 0x90, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff
};


static const char PROGMEM layer_lower_logo[] = {
0xff, 0x01, 0x01, 0x01, 0x01, 0x01, 0xf9, 0xf9, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
0x01, 0xf1, 0xf9, 0x09, 0x09, 0x09, 0x19, 0xf1, 0x01, 0x01, 0x01, 0x01, 0xf9, 0x01, 0x81, 0xc1, 
0x81, 0x01, 0xf9, 0x01, 0x01, 0x01, 0x01, 0xf9, 0xf9, 0x09, 0x09, 0x09, 0x09, 0x09, 0x01, 0x01, 
0x01, 0x01, 0xf9, 0x09, 0x09, 0x09, 0x09, 0x99, 0xf1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xff, 
0xff, 0x80, 0x80, 0x80, 0x80, 0x80, 0x9f, 0x9f, 0x90, 0x90, 0x90, 0x90, 0x90, 0x80, 0x80, 0x80, 
0x80, 0x8f, 0x9f, 0x90, 0x90, 0x90, 0x98, 0x8f, 0x80, 0x80, 0x80, 0x80, 0x8f, 0x98, 0x9f, 0x80, 
0x9f, 0x98, 0x8f, 0x80, 0x80, 0x80, 0x80, 0x9f, 0x9f, 0x91, 0x91, 0x91, 0x91, 0x90, 0x80, 0x80, 
0x80, 0x80, 0x9f, 0x81, 0x83, 0x87, 0x8d, 0x99, 0x90, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff
};


static const char PROGMEM layer_raise_logo[] = {
0xff, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xf9, 0x09, 0x09, 0x09, 0x09, 0x99, 0xf1, 0x01, 
0x01, 0x01, 0x01, 0xf9, 0xf9, 0x09, 0x09, 0x09, 0xf9, 0x01, 0x01, 0x01, 0x01, 0x01, 0x09, 0xf9, 
0x09, 0x01, 0x01, 0x01, 0x01, 0xf1, 0xf9, 0x09, 0x09, 0x09, 0x09, 0x09, 0x01, 0x01, 0x01, 0x01, 
0xf9, 0xf9, 0x09, 0x09, 0x09, 0x09, 0x09, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0xff, 
0xff, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x9f, 0x81, 0x83, 0x87, 0x8d, 0x99, 0x90, 0x80, 
0x80, 0x80, 0x80, 0x9f, 0x9f, 0x81, 0x81, 0x81, 0x81, 0x9f, 0x80, 0x80, 0x80, 0x80, 0x90, 0x9f, 
0x90, 0x80, 0x80, 0x80, 0x80, 0x91, 0x91, 0x91, 0x91, 0x91, 0x9f, 0x8f, 0x80, 0x80, 0x80, 0x80, 
0x9f, 0x9f, 0x91, 0x91, 0x91, 0x91, 0x90, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff
};


static const char PROGMEM layer_numpad_logo[] = {
0xff, 0x01, 0xf9, 0xf9, 0x19, 0xf1, 0x01, 0x01, 0xf9, 0x01, 0x01, 0x01, 0x01, 0xf9, 0xf9, 0x01, 
0x01, 0x01, 0x01, 0xf9, 0x01, 0x01, 0x01, 0xf9, 0xf9, 0x31, 0x61, 0xc1, 0x61, 0x31, 0xf9, 0x01, 
0x01, 0x01, 0x01, 0xf9, 0xf9, 0x09, 0x09, 0x09, 0x99, 0xf1, 0x01, 0x01, 0x01, 0xf9, 0xf9, 0x09, 
0x09, 0x09, 0xf9, 0x01, 0x01, 0x01, 0x01, 0xf9, 0xf9, 0x09, 0x09, 0x09, 0x19, 0xf1, 0x01, 0xff, 
0xff, 0x80, 0x9f, 0x9f, 0x80, 0x81, 0x8f, 0x98, 0x9f, 0x80, 0x80, 0x80, 0x80, 0x8f, 0x9f, 0x90, 
0x90, 0x90, 0x98, 0x8f, 0x80, 0x80, 0x80, 0x9f, 0x9f, 0x80, 0x80, 0x81, 0x80, 0x80, 0x9f, 0x80, 
0x80, 0x80, 0x80, 0x9f, 0x9f, 0x81, 0x81, 0x81, 0x81, 0x80, 0x80, 0x80, 0x80, 0x9f, 0x9f, 0x81, 
0x81, 0x81, 0x81, 0x9f, 0x80, 0x80, 0x80, 0x9f, 0x9f, 0x90, 0x90, 0x90, 0x98, 0x8f, 0x80, 0xff
};


static const char PROGMEM layer_mouse_logo[] = {
0xff, 0x01, 0x01, 0x01, 0x01, 0x01, 0xf9, 0xf9, 0x31, 0x61, 0xc1, 0x61, 0x31, 0xf9, 0x01, 0x01, 
0x01, 0x01, 0xf1, 0xf9, 0x09, 0x09, 0x09, 0x19, 0xf1, 0x01, 0x01, 0x01, 0x01, 0xf9, 0xf9, 0x01, 
0x01, 0x01, 0x01, 0xf9, 0x01, 0x01, 0x01, 0x01, 0xf1, 0xf9, 0x09, 0x09, 0x09, 0x09, 0x09, 0x01, 
0x01, 0x01, 0x01, 0xf9, 0xf9, 0x09, 0x09, 0x09, 0x09, 0x09, 0x01, 0x01, 0x01, 0x01, 0x01, 0xff, 
0xff, 0x80, 0x80, 0x80, 0x80, 0x80, 0x9f, 0x9f, 0x80, 0x80, 0x81, 0x80, 0x80, 0x9f, 0x80, 0x80, 
0x80, 0x80, 0x8f, 0x9f, 0x90, 0x90, 0x90, 0x98, 0x8f, 0x80, 0x80, 0x80, 0x80, 0x8f, 0x9f, 0x90, 
0x90, 0x90, 0x98, 0x8f, 0x80, 0x80, 0x80, 0x80, 0x91, 0x91, 0x91, 0x91, 0x91, 0x9f, 0x8f, 0x80, 
0x80, 0x80, 0x80, 0x9f, 0x9f, 0x91, 0x91, 0x91, 0x91, 0x90, 0x80, 0x80, 0x80, 0x80, 0x80, 0xff
};


static const char PROGMEM layer_adjust_logo[] = {
0xff, 0x01, 0xf9, 0xf9, 0x09, 0x09, 0x09, 0xf9, 0x01, 0x01, 0x01, 0x01, 0x01, 0xf9, 0xf9, 0x09, 
0x09, 0x09, 0x19, 0xf1, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x09, 0x09, 0xf9, 0xf9, 0x09, 0x01, 
0x01, 0x01, 0xf9, 0xf9, 0x01, 0x01, 0x01, 0x01, 0xf9, 0x01, 0x01, 0x01, 0x01, 0xf1, 0xf9, 0x09, 
0x09, 0x09, 0x09, 0x09, 0x01, 0x01, 0x01, 0x19, 0x09, 0xf9, 0xf9, 0x09, 0x09, 0x19, 0x01, 0xff, 
0xff, 0x80, 0x9f, 0x9f, 0x81, 0x81, 0x81, 0x81, 0x9f, 0x80, 0x80, 0x80, 0x80, 0x9f, 0x9f, 0x90, 
0x90, 0x90, 0x98, 0x8f, 0x80, 0x80, 0x80, 0x80, 0x8c, 0x98, 0x90, 0x98, 0x8f, 0x87, 0x80, 0x80, 
0x80, 0x80, 0x8f, 0x9f, 0x98, 0x90, 0x90, 0x98, 0x8f, 0x80, 0x80, 0x80, 0x80, 0x91, 0x91, 0x91, 
0x91, 0x91, 0x9f, 0x8f, 0x80, 0x80, 0x80, 0x80, 0x80, 0x9f, 0x9f, 0x80, 0x80, 0x80, 0x80, 0xff
};


static const char PROGMEM layer_undefined_logo[] = {
0xff, 0x01, 0x01, 0x01, 0xf9, 0xf9, 0x09, 0x09, 0x09, 0x09, 0x09, 0x01, 0x01, 0x01, 0x01, 0xf9, 
0x09, 0x09, 0x09, 0x09, 0x99, 0xf1, 0x01, 0x01, 0x01, 0x01, 0xf9, 0x09, 0x09, 0x09, 0x09, 0x99, 
0xf1, 0x01, 0x01, 0x01, 0xf1, 0xf9, 0x09, 0x09, 0x09, 0x19, 0xf1, 0x01, 0x01, 0x01, 0x01, 0xf9, 
0xf9, 0x09, 0x09, 0x09, 0x99, 0xf1, 0x01, 0x01, 0x01, 0x01, 0xd9, 0xd9, 0x01, 0x01, 0x01, 0xff, 
0xff, 0x80, 0x80, 0x80, 0x9f, 0x9f, 0x91, 0x91, 0x91, 0x91, 0x90, 0x80, 0x80, 0x80, 0x80, 0x9f, 
0x81, 0x83, 0x87, 0x8d, 0x99, 0x90, 0x80, 0x80, 0x80, 0x80, 0x9f, 0x81, 0x83, 0x87, 0x8d, 0x99, 
0x90, 0x80, 0x80, 0x80, 0x8f, 0x9f, 0x98, 0x90, 0x90, 0x98, 0x8f, 0x80, 0x80, 0x80, 0x80, 0x9f, 
0x81, 0x83, 0x87, 0x8d, 0x99, 0x90, 0x80, 0x80, 0x80, 0x80, 0x9f, 0x9f, 0x80, 0x80, 0x80, 0xff
};


static const char PROGMEM off_btn_logo[] = {
0xff, 0x01, 0x7d, 0x45, 0x45, 0x45, 0x45, 0x45, 0x7d, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 
0x01, 0x01, 0x01, 0xff
};

static const char PROGMEM on_btn_logo[] = {
0xff, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x7d, 0x7d, 0x7d, 0x7d, 0x7d, 
0x7d, 0x7d, 0x01, 0xff
};

static const char PROGMEM oled_sleep_logo[] = {
0xff, 0x83, 0x01, 0x7d, 0x7d, 0x39, 0x83, 0xff, 0x01, 0x01, 0x7f, 0x7f, 0x7f, 0x7f, 0xff, 0x01, 
0x01, 0x6d, 0x6d, 0x6d, 0x7d, 0xff, 0x01, 0x01, 0x7d, 0x7d, 0x39, 0x83, 0xff, 0x2f, 0x6f, 0x4f, 
0xff, 0x3b, 0x5b, 0x6b, 0x73, 0xff, 0x3d, 0x5d, 0x6d, 0x75, 0x79, 0xff
};

static const char PROGMEM caps_logo[] = {
0xff, 0xff, 0x01, 0x01, 0x7d, 0x7d, 0x7d, 0x39, 0xff, 0x01, 0x01, 0xed, 0xed, 0xe1, 0x0f, 0xff, 
0x01, 0x01, 0xed, 0xed, 0xed, 0xe1, 0xff, 0x61, 0x61, 0x6d, 0x6d, 0x0d, 0x0d, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

static const char PROGMEM leds_logo[] = {
0xff, 0xff, 0x01, 0x01, 0x7f, 0x7f, 0x7f, 0x7f, 0xff, 0x01, 0x01, 0x6d, 0x6d, 0x6d, 0x7d, 0xff, 
0x01, 0x01, 0x7d, 0x7d, 0x39, 0x83, 0xff, 0x61, 0x61, 0x6d, 0x6d, 0x0d, 0x0d, 0xff, 0xff, 0xff, 
0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

static const char PROGMEM audio_logo[] = {
0xff, 0xff, 0x01, 0x01, 0xed, 0xed, 0xe1, 0x0f, 0xff, 0x81, 0x01, 0x7f, 0x7f, 0x3f, 0x81, 0xff, 
0x01, 0x01, 0x7d, 0x7d, 0x39, 0x83, 0xff, 0x7d, 0x01, 0x7d, 0xff, 0x83, 0x01, 0x7d, 0x7d, 0x39, 
0x83, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

static const char PROGMEM haptic_logo[] = {
0xff, 0xff, 0x01, 0x01, 0xef, 0xef, 0xef, 0x01, 0xff, 0x01, 0x01, 0xed, 0xed, 0xe1, 0x0f, 0xff, 
0x01, 0x01, 0xed, 0xed, 0xed, 0xe1, 0xff, 0xfd, 0xfd, 0x01, 0x01, 0xfd, 0xfd, 0xff, 0x7d, 0x01, 
0x7d, 0xff, 0x01, 0x01, 0x7d, 0x7d, 0x7d, 0x39, 0xff, 0xff, 0xff, 0xff
};

static const char PROGMEM bottom_banner_logo[] = {
0x01, 0x01, 0x7d, 0x05, 0x09, 0x11, 0x21, 0x7d, 0x01, 0x01, 0x39, 0x45, 0x45, 0x45, 0x45, 0x39, 
0x01, 0x01, 0x7d, 0x05, 0x05, 0x25, 0x45, 0x59, 0x01, 0x01, 0x7d, 0x05, 0x05, 0x25, 0x45, 0x59, 
0x01, 0x01, 0x7d, 0x41, 0x41, 0x41, 0x41, 0x01, 0x01, 0x79, 0x25, 0x25, 0x25, 0x25, 0x79, 0x01, 
0x01, 0x7d, 0x05, 0x09, 0x11, 0x21, 0x7d, 0x01, 0x01, 0x7d, 0x45, 0x45, 0x45, 0x39, 0x00, 0x00
};


static const char PROGMEM shift_logo[] = {
0xff, 0xa1, 0xa1, 0xad, 0xad, 0x8d, 0x8d, 0xff, 0x81, 0x81, 0xef, 0xef, 0xef, 0x81, 0xff, 0xbd, 
0x81, 0xbd, 0xff, 0x81, 0x81, 0xed, 0xed, 0xfd, 0xff, 0xfd, 0xfd, 0x81, 0x81, 0xfd, 0xfd, 0xff
};

static const char PROGMEM alt_logo[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x81, 0x81, 0xed, 0xed, 0xe1, 0x8f, 
0xff, 0x81, 0x81, 0xbf, 0xbf, 0xbf, 0xff, 0xfd, 0xfd, 0x81, 0x81, 0xfd, 0xfd, 0xff, 0x00, 0x00
};

static const char PROGMEM ctrl_logo[] = {
0xff, 0x81, 0x81, 0xbd, 0xbd, 0xbd, 0x99, 0xff, 0xfd, 0xfd, 0x81, 0x81, 0xfd, 0xfd, 0xff, 0x81, 
0x81, 0xed, 0xcd, 0x8d, 0xa1, 0xff, 0x81, 0x81, 0xbf, 0xbf, 0xbf, 0xbf, 0xff, 0x00, 0x00, 0x00
};

static const char PROGMEM gui_logo[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x81, 0x81, 0xbd, 0xbd, 0xad, 0x8d, 
0xff, 0x81, 0x81, 0xbf, 0xbf, 0xbf, 0x81, 0xff, 0xbd, 0x81, 0xbd, 0xff, 0x00, 0x00, 0x00, 0x00
};

static const char PROGMEM keylogger_logo[] = {
0xff, 0x81, 0x81, 0xe7, 0xd3, 0xb9, 0xff, 0x81, 0x81, 0xad, 0xad, 0xbd, 0xff, 0xf9, 0xf3, 0x87, 
0x87, 0xf3, 0xf9, 0xff, 0x81, 0x81, 0xbf, 0xbf, 0xbf, 0xff, 0xc3, 0x81, 0xbd, 0xbd, 0x99, 0xc3, 
0xff, 0x81, 0x81, 0xbd, 0xbd, 0xad, 0x8d, 0xff, 0x81, 0x81, 0xbd, 0xbd, 0xad, 0x8d, 0xff, 0x81, 
0x81, 0xad, 0xad, 0xbd, 0xff, 0x81, 0x81, 0xed, 0xcd, 0xad, 0xb3, 0xff, 0x00, 0x00, 0x00, 0x00
};
